<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.enjoytrip.comment.model.mapper.CommentMapper">

    <resultMap id="commentWriting" type="commentDto" >
        <result column="board_id" property="boardId"></result>
        <result column="content" property="content"></result>
        <result column="member_id" property="memberId"></result>
    </resultMap>
    <resultMap id="commentUpdating" type="commentUpdateDto" >
        <result column="comment_id" property="commentId"></result>
        <result column="content" property="content"></result>
        <result column="member_id" property="memberId"></result>
    </resultMap>

    <insert id="writeComment" parameterType="commentDto">
        insert into comments (board_id, content, member_id)
        values (#{boardId}, #{content}, #{memberId})
    </insert>

    <select id="getCommentList" parameterType="int" resultType="CommentReadDto">
        select c.comment_id, c.content, c.create_time, m.nickname
        from comments c
                 inner join members m on c.member_id = m.member_id
        where c.board_id = #{boardId}
        and c.is_deleted = false
    </select>

    <update id="updateComment" parameterType="commentUpdateDto">
        update comments
        set content = #{content}
        where comment_id = #{commentId}
          and c.is_deleted = false
    </update>

    <delete id="deleteComment" parameterType="int">
        update comments
        set is_deleted = true
        where comment_id = #{commentId}
    </delete>

    <select id="getCommentById" parameterType="int" resultType="commentDto">
        select comment_id, board_id, content, create_time, member_id
        from comments
        where comment_id = #{commentId}
          and c.is_deleted = false
        order by comment_id
    </select>
</mapper>